"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var types_js_1 = require("../webs/types.js");
var types_js_2 = require("./types.js");
var sharepointqueryable_js_1 = require("../sharepointqueryable.js");
var extractweburl_js_1 = require("../utils/extractweburl.js");
var funcs_js_1 = require("./funcs.js");
var common_1 = require("@pnp/common-commonjs");
var odata_1 = require("@pnp/odata-commonjs");
var operations_js_1 = require("../operations.js");
/**
 * Shares this web with the supplied users
 * @param loginNames The resolved login names to share
 * @param role The role to share this web
 * @param emailData Optional email data
 */
types_js_1._Web.prototype.shareWith = function (loginNames, role, emailData) {
    if (role === void 0) { role = types_js_2.SharingRole.View; }
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
        var dependency, web, url;
        return (0, tslib_1.__generator)(this, function (_a) {
            switch (_a.label) {
                case 0:
                    dependency = this.addBatchDependency();
                    web = new sharepointqueryable_js_1._SharePointQueryableInstance((0, extractweburl_js_1.extractWebUrl)(this.toUrl()), "/_api/web/url");
                    return [4 /*yield*/, web.get()];
                case 1:
                    url = _a.sent();
                    dependency();
                    return [2 /*return*/, this.shareObject((0, common_1.combine)(url, "/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1"), loginNames, role, emailData)];
            }
        });
    });
};
/**
 * Provides direct access to the static web.ShareObject method
 *
 * @param url The url to share
 * @param loginNames Resolved loginnames string[] of a single login name string
 * @param roleValue Role value
 * @param emailData Optional email data
 * @param groupId Optional group id
 * @param propagateAcl
 * @param includeAnonymousLinkInEmail
 * @param useSimplifiedRoles
 */
types_js_1._Web.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {
    if (propagateAcl === void 0) { propagateAcl = false; }
    if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }
    if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }
    return (0, funcs_js_1.shareObject)(this, {
        emailData: emailData,
        group: group,
        includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,
        loginNames: loginNames,
        propagateAcl: propagateAcl,
        role: role,
        url: url,
        useSimplifiedRoles: useSimplifiedRoles,
    });
};
/**
 * Supplies a method to pass any set of arguments to ShareObject
 *
 * @param options The set of options to send to ShareObject
 */
types_js_1._Web.prototype.shareObjectRaw = function (options) {
    return (0, funcs_js_1.shareObject)(this, options, true);
};
/**
 * Supplies a method to pass any set of arguments to ShareObject
 *
 * @param options The set of options to send to ShareObject
 */
types_js_1._Web.prototype.unshareObject = function (url) {
    return (0, operations_js_1.spPost)((0, types_js_1.Web)(this, "unshareObject").configureFrom(this), (0, odata_1.body)({ url: url }));
};
//# sourceMappingURL=web.js.map