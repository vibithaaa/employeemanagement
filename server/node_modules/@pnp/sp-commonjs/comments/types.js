"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Replies = exports._Replies = exports.Comment = exports._Comment = exports.Comments = exports._Comments = void 0;
var tslib_1 = require("tslib");
var decorators_js_1 = require("../decorators.js");
var sharepointqueryable_js_1 = require("../sharepointqueryable.js");
var common_1 = require("@pnp/common-commonjs");
var odata_js_1 = require("../odata.js");
var metadata_js_1 = require("../utils/metadata.js");
var odata_1 = require("@pnp/odata-commonjs");
var operations_js_1 = require("../operations.js");
var telemetry_js_1 = require("../telemetry.js");
var _Comments = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Comments, _super);
    function _Comments() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Adds a new comment to this collection
     *
     * @param info Comment information to add
     */
    _Comments.prototype.add = function (info) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var postBody, d;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (typeof info === "string") {
                            info = { text: info };
                        }
                        postBody = (0, odata_1.body)((0, common_1.assign)((0, metadata_js_1.metadata)("Microsoft.SharePoint.Comments.comment"), info));
                        return [4 /*yield*/, (0, operations_js_1.spPost)(this.clone(exports.Comments, null), postBody)];
                    case 1:
                        d = _a.sent();
                        return [2 /*return*/, (0, common_1.assign)(this.getById(d.id), d)];
                }
            });
        });
    };
    /**
     * Gets a comment by id
     *
     * @param id Id of the comment to load
     */
    _Comments.prototype.getById = function (id) {
        return telemetry_js_1.tag.configure((0, exports.Comment)(this).concat("(" + id + ")"), "coms.getById");
    };
    /**
     * Deletes all the comments in this collection
     */
    _Comments.prototype.clear = function () {
        return (0, operations_js_1.spPost)(telemetry_js_1.tag.configure(this.clone(exports.Comments, "DeleteAll"), "coms.clear"));
    };
    (0, tslib_1.__decorate)([
        (0, telemetry_js_1.tag)("coms.add")
    ], _Comments.prototype, "add", null);
    _Comments = (0, tslib_1.__decorate)([
        (0, decorators_js_1.defaultPath)("comments")
    ], _Comments);
    return _Comments;
}(sharepointqueryable_js_1._SharePointQueryableCollection));
exports._Comments = _Comments;
exports.Comments = (0, sharepointqueryable_js_1.spInvokableFactory)(_Comments);
var _Comment = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Comment, _super);
    function _Comment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_Comment.prototype, "replies", {
        /**
         * A comment's replies
         */
        get: function () {
            return telemetry_js_1.tag.configure((0, exports.Replies)(this), "com.replies");
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Likes the comment as the current user
     */
    _Comment.prototype.like = function () {
        return (0, operations_js_1.spPost)(this.clone(exports.Comment, "Like"));
    };
    /**
     * Unlikes the comment as the current user
     */
    _Comment.prototype.unlike = function () {
        return (0, operations_js_1.spPost)(this.clone(exports.Comment, "Unlike"));
    };
    /**
     * Deletes this comment
     */
    _Comment.prototype.delete = function () {
        return (0, operations_js_1.spDelete)(this);
    };
    (0, tslib_1.__decorate)([
        (0, telemetry_js_1.tag)("com.like")
    ], _Comment.prototype, "like", null);
    (0, tslib_1.__decorate)([
        (0, telemetry_js_1.tag)("com.unlike")
    ], _Comment.prototype, "unlike", null);
    (0, tslib_1.__decorate)([
        (0, telemetry_js_1.tag)("com.delete")
    ], _Comment.prototype, "delete", null);
    return _Comment;
}(sharepointqueryable_js_1._SharePointQueryableInstance));
exports._Comment = _Comment;
exports.Comment = (0, sharepointqueryable_js_1.spInvokableFactory)(_Comment);
var _Replies = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Replies, _super);
    function _Replies() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Adds a new reply to this collection
     *
     * @param info Comment information to add
     */
    _Replies.prototype.add = function (info) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var postBody, d;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (typeof info === "string") {
                            info = { text: info };
                        }
                        postBody = (0, odata_1.body)((0, common_1.assign)((0, metadata_js_1.metadata)("Microsoft.SharePoint.Comments.comment"), info));
                        return [4 /*yield*/, (0, operations_js_1.spPost)(this.clone(exports.Replies, null), postBody)];
                    case 1:
                        d = _a.sent();
                        return [2 /*return*/, (0, common_1.assign)((0, exports.Comment)((0, odata_js_1.odataUrlFrom)(d)), d)];
                }
            });
        });
    };
    (0, tslib_1.__decorate)([
        (0, telemetry_js_1.tag)("reps.add")
    ], _Replies.prototype, "add", null);
    _Replies = (0, tslib_1.__decorate)([
        (0, decorators_js_1.defaultPath)("replies")
    ], _Replies);
    return _Replies;
}(sharepointqueryable_js_1._SharePointQueryableCollection));
exports._Replies = _Replies;
exports.Replies = (0, sharepointqueryable_js_1.spInvokableFactory)(_Replies);
//# sourceMappingURL=types.js.map