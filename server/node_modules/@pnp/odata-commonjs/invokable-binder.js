"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.invokableFactory = void 0;
var tslib_1 = require("tslib");
var common_1 = require("@pnp/common-commonjs");
var invokable_extensions_js_1 = require("./invokable-extensions.js");
var invokableBinder = function (invoker) { return function (constructor) {
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var factory = function (as) {
            var r = Object.assign(function () {
                var ags = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    ags[_i] = arguments[_i];
                }
                return invoker.call.apply(invoker, (0, tslib_1.__spreadArray)([r], (0, tslib_1.__read)(ags), false));
            }, new (constructor.bind.apply(constructor, (0, tslib_1.__spreadArray)([void 0], (0, tslib_1.__read)(as), false)))());
            Reflect.setPrototypeOf(r, constructor.prototype);
            return r;
        };
        // ie11 setting is always global
        if (common_1.DefaultRuntime.get("ie11") || false) {
            return factory(args);
        }
        else {
            return new Proxy((0, invokable_extensions_js_1.applyFactoryExtensions)(factory, args), {
                apply: function (target, _thisArg, argArray) {
                    return (0, invokable_extensions_js_1.extensionOrDefault)("apply", function () {
                        var a = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            a[_i] = arguments[_i];
                        }
                        return Reflect.apply(a[0], a[1], a[2]);
                    }, target, _thisArg, argArray);
                },
                get: function (target, p, receiver) {
                    return (0, invokable_extensions_js_1.extensionOrDefault)("get", function () {
                        var a = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            a[_i] = arguments[_i];
                        }
                        return Reflect.get(a[0], a[1], a[2]);
                    }, target, p, receiver);
                },
                has: function (target, p) {
                    return (0, invokable_extensions_js_1.extensionOrDefault)("has", function () {
                        var a = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            a[_i] = arguments[_i];
                        }
                        return Reflect.has(a[0], a[1]);
                    }, target, p);
                },
                set: function (target, p, value, receiver) {
                    return (0, invokable_extensions_js_1.extensionOrDefault)("set", function () {
                        var a = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            a[_i] = arguments[_i];
                        }
                        return Reflect.set(a[0], a[1], a[2], a[3]);
                    }, target, p, value, receiver);
                },
            });
        }
    };
}; };
exports.invokableFactory = invokableBinder(function (options) {
    return this.defaultAction(options);
});
//# sourceMappingURL=invokable-binder.js.map